/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015 Norwegian Defence Research Establishment / NTNU
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

package no.ntnu.okse.protocol;

import org.apache.log4j.Logger;

/**
 * Created by Aleksander Skraastad (myth) on 3/13/15.
 * <p>
 * okse is licenced under the MIT licence.
 */
public abstract class AbstractProtocolServer implements ProtocolServer {

    protected String protocolServerType;
    protected int totalRequests, totalMessages, totalBadRequests, totalErrors;

    public AbstractProtocolServer() {
        protocolServerType = "";
        totalMessages = 0;
        totalRequests = 0;
    }

    // Logger singleton
    protected Logger log;

    // Server wrapping thread
    protected Thread _serverThread;

    /**
     * Total amount of requests from this WSNotificationServer that has passed through this server instance.
     * @return An integer representing the total amount of request.
     */
    public int getTotalRequests() {
        return totalRequests;
    }

    /**
     * Total amount of messages from this WSNotificationServer that has passed through this server instance.
     * @return: An integer representing the total amount of messages.
     */
    public int getTotalMessages() {
        return totalMessages;
    }

    /**
     * This interface method must return the total amount of bad requests recieved by the protocol server.
     * @return An integer representing the total amount of recieved malformed or bad requests
     */
    public int getTotalBadRequests() { return totalBadRequests; };

    /**
     * This interface method must return the total amount of errors generated by the protocol server.
     * @return An integer representing the total amount of errors in the protocol server.
     */
    public int getTotalErrors() { return totalErrors; };

    // Initializer
    protected abstract void init(Integer port);

}
